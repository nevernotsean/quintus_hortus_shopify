{% layout 'fullpage' %}
<div class="preload-img" style="display: none;">
  <img src="{{ 'bg-calculettepage.svg' | asset_url }}" alt="">
</div>
<div class="section">
  <div class="slide slide{{forloop.index}} center">
    <div class="slide-inner">
      <div class="nl-blurred">
    			<header>
    				<h1>Combien me faut-il de chaussettes ?</h1>
    			</header>
    			<div class="main clearfix">
    				<form id="nl-form" class="nl-form">
    					Ma famille est compos√©e de
    					<select name="household">
                <option value="1">1 personne</option>
                <option value="2">2 personnes</option>
                <option value="3">3 personnes</option>
                <option value="4" selected>4 personnes</option>
                <option value="5">5 personnes</option>
                <option value="6">6 personnes</option>
                <option value="7">7 personnes</option>
                <option value="8">8 personnes</option>
                <option value="9">9 personnes</option>
                <option value="10">10 personnes</option>
    					</select>.
    					Nous changeons nos chaussettes
    					<select name="change">
    						<option value="2">2 fois par jour</option>
    						<option value="1" selected>1 fois par jour</option>
    						<option value="0.5">1 fois tous les 2 jours</option>
    					</select>
    					et nous faisons une lessive
    					<select name="wash">
    						<option value="1">tous les jours</option>
    					 	<option value="4">tous les 3 jours</option>
    					 	<option value="7" selected>toutes les semaines</option>
    					</select>.
              <br /><br />
              Il y a
              <select name="small">
                <option value="0">0 enfant</option>
                <option value="1">1 enfant</option>
                <option value="2" selected>2 enfants</option>
                <option value="3">3 enfants</option>
                <option value="4">4 enfants</option>
                <option value="5">5 enfants</option>
                <option value="6">6 enfants</option>
                <option value="7">7 enfants</option>
                <option value="8">8 enfants</option>
                <option value="9">9 enfants</option>
                <option value="10">10 enfants</option>
    					</select>
              chaussant du 30-35,
              <select name="medium">
                <option value="0">0 personne</option>
                <option value="1" selected>1 personne</option>
                <option value="2">2 personnes</option>
                <option value="3">3 personnes</option>
                <option value="4">4 personnes</option>
                <option value="5">5 personnes</option>
                <option value="6">6 personnes</option>
                <option value="7">7 personnes</option>
                <option value="8">8 personnes</option>
                <option value="9">9 personnes</option>
                <option value="10">10 personnes</option>
              </select>
              chaussant du 35-40 et
              <select name="large">
                <option value="0">0 personne</option>
                <option value="1" selected>1 personne</option>
                <option value="2">2 personnes</option>
                <option value="3">3 personnes</option>
                <option value="4">4 personnes</option>
                <option value="5">5 personnes</option>
                <option value="6">6 personnes</option>
                <option value="7">7 personnes</option>
                <option value="8">8 personnes</option>
                <option value="9">9 personnes</option>
                <option value="10">10 personnes</option>
              </select>
              chaussant du 40-45.
    					<div class="nl-submit-wrap">
    						<button class="nl-submit button" type="submit">Calculer</button>
                <a href="#" id="alert-link" class="popup-link" data-popup="#PopupAlert" style="display: none;"></a>
    					</div>
    					<div class="nl-overlay"></div>
    				</form>
    			</div>
    		<script>
          /**
           * nlform.js v1.0.0
           * http://www.codrops.com
           *
           * Licensed under the MIT license.
           * http://www.opensource.org/licenses/mit-license.php
           *
           * Copyright 2013, Codrops
           * http://www.codrops.com
           */
          ;( function( window ) {

          	'use strict';

          	var document = window.document;

          	if (!String.prototype.trim) {
          		String.prototype.trim=function(){return this.replace(/^\s+|\s+$/g, '');};
          	}

          	function NLForm( el ) {
          		this.el = el;
          		this.overlay = this.el.querySelector( '.nl-overlay' );
          		this.fields = [];
          		this.fldOpen = -1;
          		this._init();
          	}

          	NLForm.prototype = {
          		_init : function() {
          			var self = this;
          			Array.prototype.slice.call( this.el.querySelectorAll( 'select' ) ).forEach( function( el, i ) {
          				self.fldOpen++;
          				self.fields.push( new NLField( self, el, 'dropdown', self.fldOpen ) );
          			} );
          			Array.prototype.slice.call( this.el.querySelectorAll( 'input' ) ).forEach( function( el, i ) {
          				self.fldOpen++;
          				self.fields.push( new NLField( self, el, 'input', self.fldOpen ) );
          			} );
          			this.overlay.addEventListener( 'click', function(ev) { self._closeFlds(); } );
          			this.overlay.addEventListener( 'touchstart', function(ev) { self._closeFlds(); } );
          		},
          		_closeFlds : function() {
          			if( this.fldOpen !== -1 ) {
          				this.fields[ this.fldOpen ].close();
          			}
          		}
          	}

          	function NLField( form, el, type, idx ) {
          		this.form = form;
          		this.elOriginal = el;
          		this.pos = idx;
          		this.type = type;
          		this._create();
          		this._initEvents();
          	}

          	NLField.prototype = {
          		_create : function() {
          			if( this.type === 'dropdown' ) {
          				this._createDropDown();
          			}
          			else if( this.type === 'input' ) {
          				this._createInput();
          			}
          		},
          		_createDropDown : function() {
          			var self = this;
          			this.fld = document.createElement( 'div' );
          			this.fld.className = 'nl-field nl-dd';
          			this.toggle = document.createElement( 'a' );
          			this.toggle.innerHTML = this.elOriginal.options[ this.elOriginal.selectedIndex ].innerHTML;
          			this.toggle.className = 'nl-field-toggle';
          			this.optionsList = document.createElement( 'ul' );
          			var ihtml = '';
          			Array.prototype.slice.call( this.elOriginal.querySelectorAll( 'option' ) ).forEach( function( el, i ) {
          				ihtml += self.elOriginal.selectedIndex === i ? '<li class="nl-dd-checked">' + el.innerHTML + '</li>' : '<li>' + el.innerHTML + '</li>';
          				// selected index value
          				if( self.elOriginal.selectedIndex === i ) {
          					self.selectedIdx = i;
          				}
          			} );
          			this.optionsList.innerHTML = ihtml;
          			this.fld.appendChild( this.toggle );
          			this.fld.appendChild( this.optionsList );
          			this.elOriginal.parentNode.insertBefore( this.fld, this.elOriginal );
          			this.elOriginal.style.display = 'none';
          		},
          		_createInput : function() {
          			var self = this;
          			this.fld = document.createElement( 'div' );
          			this.fld.className = 'nl-field nl-ti-text';
          			this.toggle = document.createElement( 'a' );
          			this.toggle.innerHTML = this.elOriginal.getAttribute( 'placeholder' );
          			this.toggle.className = 'nl-field-toggle';
          			this.optionsList = document.createElement( 'ul' );
          			this.getinput = document.createElement( 'input' );
          			this.getinput.setAttribute( 'type', 'text' );
          			this.getinput.setAttribute( 'placeholder', this.elOriginal.getAttribute( 'placeholder' ) );
          			this.getinputWrapper = document.createElement( 'li' );
          			this.getinputWrapper.className = 'nl-ti-input';
          			this.inputsubmit = document.createElement( 'button' );
          			this.inputsubmit.className = 'nl-field-go';
          			this.inputsubmit.innerHTML = 'Go';
          			this.getinputWrapper.appendChild( this.getinput );
          			this.getinputWrapper.appendChild( this.inputsubmit );
          			this.example = document.createElement( 'li' );
          			this.example.className = 'nl-ti-example';
          			this.example.innerHTML = this.elOriginal.getAttribute( 'data-subline' );
          			this.optionsList.appendChild( this.getinputWrapper );
          			this.optionsList.appendChild( this.example );
          			this.fld.appendChild( this.toggle );
          			this.fld.appendChild( this.optionsList );
          			this.elOriginal.parentNode.insertBefore( this.fld, this.elOriginal );
          			this.elOriginal.style.display = 'none';
          		},
          		_initEvents : function() {
          			var self = this;
          			this.toggle.addEventListener( 'click', function( ev ) { ev.preventDefault(); ev.stopPropagation(); self._open(); } );
          			this.toggle.addEventListener( 'touchstart', function( ev ) { ev.preventDefault(); ev.stopPropagation(); self._open(); } );

          			if( this.type === 'dropdown' ) {
          				var opts = Array.prototype.slice.call( this.optionsList.querySelectorAll( 'li' ) );
          				opts.forEach( function( el, i ) {
          					el.addEventListener( 'click', function( ev ) { ev.preventDefault(); self.close( el, opts.indexOf( el ) ); } );
          					el.addEventListener( 'touchstart', function( ev ) { ev.preventDefault(); self.close( el, opts.indexOf( el ) ); } );
          				} );
          			}
          			else if( this.type === 'input' ) {
          				this.getinput.addEventListener( 'keydown', function( ev ) {
          					if ( ev.keyCode == 13 ) {
          						self.close();
          					}
          				} );
          				this.inputsubmit.addEventListener( 'click', function( ev ) { ev.preventDefault(); self.close(); } );
          				this.inputsubmit.addEventListener( 'touchstart', function( ev ) { ev.preventDefault(); self.close(); } );
          			}

          		},
          		_open : function() {
          			if( this.open ) {
          				return false;
          			}
          			this.open = true;
          			this.form.fldOpen = this.pos;
          			var self = this;
          			this.fld.className += ' nl-field-open';
          		},
          		close : function( opt, idx ) {
          			if( !this.open ) {
          				return false;
          			}
          			this.open = false;
          			this.form.fldOpen = -1;
          			this.fld.className = this.fld.className.replace(/\b nl-field-open\b/,'');

          			if( this.type === 'dropdown' ) {
          				if( opt ) {
          					// remove class nl-dd-checked from previous option
          					var selectedopt = this.optionsList.children[ this.selectedIdx ];
          					selectedopt.className = '';
          					opt.className = 'nl-dd-checked';
          					this.toggle.innerHTML = opt.innerHTML;
          					// update selected index value
          					this.selectedIdx = idx;
          					// update original select element¬¥s value
          					this.elOriginal.value = this.elOriginal.children[ this.selectedIdx ].value;
          				}
          			}
          			else if( this.type === 'input' ) {
          				this.getinput.blur();
          				this.toggle.innerHTML = this.getinput.value.trim() !== '' ? this.getinput.value : this.getinput.getAttribute( 'placeholder' );
          				this.elOriginal.value = this.getinput.value;
          			}
          		}
          	}

          	// add to global namespace
          	window.NLForm = NLForm;

          } )( window );

    			var nlform = new NLForm( document.getElementById( 'nl-form' ) );

          function objectifyForm(formArray) {//serialize data function
            var returnArray = {};
            for (var i = 0; i < formArray.length; i++){
              returnArray[formArray[i]['name']] = formArray[i]['value'];
            }
            return returnArray;
          }

          function calculateOrder(formObject){
            var response, socks, smAmt, mdAmt, lgAmt, S, M, L;

            socks = formObject.household * formObject.change * formObject.wash * 2
            smAmt = (socks / formObject.household) * formObject.small * 13.85
            mdAmt = (socks / formObject.household) * formObject.medium * 16.85
            lgAmt = (socks / formObject.household) * formObject.large * 21.45

            var S = Math.ceil(smAmt / 100) * 100
            var M = Math.ceil(mdAmt / 100) * 100
            var L = Math.ceil(lgAmt / 100) * 100

            response = 'Vous avez besoin de <strong>' + socks + '</strong> chaussettes. Il vous faut <strong>' + S + '</strong> gr de taille S, <strong>' + M + '</strong> gr de taille M et <strong>' + L + '</strong> gr de taille L.'

            console.log(formObject)
            // alert(response)
            $('#alert').html(response)

            $('#alert-link').trigger('click');
          }

          $('#nl-form').on('submit',function (e) {
            e.preventDefault();
            var form = e.target,
                serialized = $(form).serializeArray()

            var formObject = objectifyForm(serialized)

            calculateOrder(formObject)
          })
    		</script>
        <div id="PopupAlert" class="popup overlay">
          <div class="popup-inner">
            <div class="popup-outside"></div>
            <div class="popup-content text-center">
                <div class="h1">Combien de chaussettes ma familles √† besoin</div>
                <p id="alert"></p>
                <a class="button" href="/products/carrot">J'ach√®te maintenant</a>
              </div>
          </div>
        </div>
    	</div>
    </div>
  </div>
</div>
